'use strict';

const field = document.querySelector('.game__field');
const fieldRect = field.getBoundingClientRect();
const gameBtn = document.querySelector('.game__button');
const gameTimer = document.querySelector('.game__timer');
const gameScore = document.querySelector('.game__score');
const popUp = document.querySelector('.pop-up');
const popUpMessage = document.querySelector('.pop-up__message');
const popUpRefresh = document.querySelector('.pop-up__refresh');

const carrotSound = new Audio('sound/carrot_pull.mp3');
const bugSound = new Audio('sound/bug_pull.mp3');
const bgSound = new Audio('sound/bg.mp3');
const winSound = new Audio('sound/game_win.mp3');
const alertSound = new Audio('sound/alert.wav');

let started = false;
let score = 0;
let timer = undefined;

gameBtn.addEventListener('click', () => {
  if(started) {
    stopGame();
  } else {
    startGame();
  }
});

function startGame() {
  started = true;
  playSound(bgSound);
  initGame();
  showStopButton();
  showTimerAndScore();
  startGameTimer();
}

function showStopButton() {
  const icon = document.querySelector('.fas');
  icon.classList.remove('fa-play');
  icon.classList.add('fa-stop');
}

function showTimerAndScore() {
  gameTimer.style.visibility = 'visible';
  gameScore.style.visibility = 'visible';
  gameBtn.style.visibility = 'visible';
}

const GAME_DURATION_SEC = 10;
function startGameTimer() {
  let remainingTimeSec = GAME_DURATION_SEC;
  updateTimerText(remainingTimeSec);
  timer = setInterval(() => {
    if(remainingTimeSec <= 0){
      clearInterval(timer);
      finishGame(carrotCount === score);
      return;
    }
    updateTimerText(--remainingTimeSec);
  }, 1000); // 1초마다 실행(1초마다 --)
}

function updateTimerText(time) {
  const minutes = Math.floor(time / 60);
  const seconds = time % 60;
  gameTimer.innerText = `${minutes}:${seconds}`;
}

function stopGame() {
  started = false;
  stopSound(bgSound);
  stopGameTimer();
  hideGameButton();
  showPopUpWithText('REPLAY❓');
  playSound(alertSound);
}

function stopGameTimer() {
  clearInterval(timer);
}

function hideGameButton() {
  gameBtn.style.visibility = 'hidden';
}

function showPopUpWithText(text) {
  popUp.classList.remove('pop-up--hide');
  popUpMessage.innerText = text;
}

const carrotCount = 10;
const bugCount = 7;
function initGame() {
  field.innerHTML = ``; // 초기화
  gameScore.innerText = carrotCount;
  addItem('carrot', carrotCount, 'img/carrot.png');
  addItem('bug', bugCount, 'img/bug.png');
}

const carrotSize = 80;
function addItem(className, count, imgPath) {
  const x1 = 0;
  const y1 = 0;
  const x2 = fieldRect.width - carrotSize;
  const y2 = fieldRect.height - carrotSize;

  for(let i = 0; i<count; i++){
    const item = document.createElement('img');
    item.setAttribute('class', className);
    item.setAttribute('src', imgPath);
    const x = randomNumber(x1, x2);
    const y = randomNumber(y1, y2);
    item.style.position = 'absolute';
    item.style.left = `${x}px`;
    item.style.top= `${y}px`;
    field.appendChild(item);
  }
}

function randomNumber(min, max){
  return Math.random() * (max - min) + min;
}

field.addEventListener('click', (event) => {onFieldClick(event)});

function onFieldClick(event) {
  if(!started){
    return;
  }
  const target = event.target;
  if(target.matches('.carrot')){
    target.remove();
    score++;
    playSound(carrotSound);
    updateScoreBoard();
    if(score === carrotCount){
      stopGameTimer();
      finishGame(true);
    }
  } else if(target.matches('.bug')){
    playSound(bugSound);
    stopGameTimer();
    showPopUpWithText('REPLAY❓');
    finishGame(false);
  }
}

function playSound(sound) {
  sound.play();
}

function stopSound(sound) {
  sound.pause();
  sound.currentTime = 0;
}

function updateScoreBoard() {
  gameScore.innerText = carrotCount - score;
}

function finishGame(win) {
  started = false;
  stopSound(bgSound);
  if(win) {
    playSound(winSound);
  } else {
    playSound(alertSound);
  }
  hideGameButton();
  showPopUpWithText(win? 'YOU WON 🎉' : 'YOU LOST 💣');
  score = 0;
}

popUpRefresh.addEventListener('click', () => {
  startGame();
  hidePopUp();
});

function hidePopUp() {
  popUp.classList.add('pop-up--hide');
}